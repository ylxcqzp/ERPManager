<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.erp.mapper.JobLevelMapper">
  <resultMap id="BaseResultMap" type="com.example.erp.entity.JobLevel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="title_level" jdbcType="CHAR" property="titleLevel" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
  </resultMap>
  <select id="findLevelById" parameterType="int" resultMap="BaseResultMap">
    select * from jobLevel where id = #{id}
  </select>
  <sql id="Base_Column_List">
    id, `name`, title_level, create_date, enabled
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jobLevel
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="getAll" resultType="com.example.erp.entity.JobLevel">
      select
      <include refid="Base_Column_List"/>
      from jobLevel
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jobLevel
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteJobLevelsByIds">
      delete from jobLevel where id in
      <foreach collection="ids" item="id" close=")" open="(" separator=",">
        #{id}
      </foreach>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.erp.entity.JobLevel" useGeneratedKeys="true">
    insert into jobLevel (`name`, title_level, create_date, 
      enabled)
    values (#{name,jdbcType=VARCHAR}, #{titleLevel,jdbcType=CHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{enabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.erp.entity.JobLevel" useGeneratedKeys="true">
    insert into jobLevel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="titleLevel != null">
        title_level,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="titleLevel != null">
        #{titleLevel,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.erp.entity.JobLevel">
    update jobLevel
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="titleLevel != null">
        title_level = #{titleLevel,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.erp.entity.JobLevel">
    update jobLevel
    set `name` = #{name,jdbcType=VARCHAR},
      title_level = #{titleLevel,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>