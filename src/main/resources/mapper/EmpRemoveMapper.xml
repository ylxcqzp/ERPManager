<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.erp.mapper.EmpRemoveMapper">
  <resultMap id="BaseResultMap" type="com.example.erp.entity.EmpRemove">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="after_department" jdbcType="INTEGER" property="afterDepartment" />
    <result column="after_position" jdbcType="INTEGER" property="afterPosition" />
    <result column="remove_date" jdbcType="DATE" property="removeDate" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <association property="employee" column="eid" select="com.example.erp.mapper.EmployeeMapper.findEmpById"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, eid, after_department, after_position, remove_date, reason, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from empRemove
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from empRemove
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.erp.entity.EmpRemove" useGeneratedKeys="true">
    insert into empRemove (eid, after_department, after_position, 
      remove_date, reason, remark
      )
    values (#{eid,jdbcType=INTEGER}, #{afterDepartment,jdbcType=INTEGER}, #{afterPosition,jdbcType=INTEGER}, 
      #{removeDate,jdbcType=DATE}, #{reason,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.erp.entity.EmpRemove" useGeneratedKeys="true">
    insert into empRemove
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employee.id != null">
        eid,
      </if>
      <if test="afterDepartment != null">
        after_department,
      </if>
      <if test="afterPosition != null">
        after_position,
      </if>
      <if test="removeDate != null">
        remove_date,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employee.id != null">
        #{employee.id,jdbcType=INTEGER},
      </if>
      <if test="afterDepartment != null">
        #{afterDepartment,jdbcType=INTEGER},
      </if>
      <if test="afterPosition != null">
        #{afterPosition,jdbcType=INTEGER},
      </if>
      <if test="removeDate != null">
        #{removeDate,jdbcType=DATE},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.erp.entity.EmpRemove">
    update empRemove
    <set>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="afterDepartment != null">
        after_department = #{afterDepartment,jdbcType=INTEGER},
      </if>
      <if test="afterPosition != null">
        after_position = #{afterPosition,jdbcType=INTEGER},
      </if>
      <if test="removeDate != null">
        remove_date = #{removeDate,jdbcType=DATE},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.erp.entity.EmpRemove">
    update empRemove
    set eid = #{eid,jdbcType=INTEGER},
      after_department = #{afterDepartment,jdbcType=INTEGER},
      after_position = #{afterPosition,jdbcType=INTEGER},
      remove_date = #{removeDate,jdbcType=DATE},
      reason = #{reason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>